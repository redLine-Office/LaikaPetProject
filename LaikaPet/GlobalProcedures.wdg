#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : GlobalProcedures
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x14379a0d00052d93
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes : []
  procedures :
   -
     name : Login
     procedure_id : 1456802578376875386
     type_code : 15
     code : |1-
      // Summary: <specify the procedure action>
      // Syntax:
      //[ <Result> = ] Login ()
      //
      // Parameters:
      //	None
      // Example:
      // <Specify a usage example>
      //
      // Return value:
      procedure Login()
      WebserviceWriteMIMEType(mimeTypeJSON)
      jRes is JSON
      
      dados is Buffer = WebserviceParameter(paramBuffer)
      STLogin is structure
      	email is string
      	passw is string
      end
      jLogin is stlogin
      Deserialize(jLogin,dados,psdJSON)
      
      // Verificações
      if jLogin.email = "" THEN
      	jRes = Return_False(jRes,"EMPTY_EMAIL","E-mail não informado",400)
      	result jRes
      END
      
      if jLogin.passw = "" THEN
      	jRes = Return_False(jRes,"EMPTY_PASSWORD","Senha não informada",400)
      	result jRes
      END
      
      usuarios.ReadSeekFirst(EMAIL,jLogin.email)
      if usuarios.Found() = false THEN
      	jRes = Return_False(jRes,"USER_NOT_FOUND","Usuário não encontrado",404)
      	result jRes
      END
      
      if jLogin.passw <> usuarios.SENHA THEN
      	jRes = Return_False(jRes,"WRONG_PASSWORD","Senha incorreta",401)
      	result jRes
      END
      
      STResposta is structure
      	name	is string
      	token	is string
      end
      user is stresposta
      user.name	= usuarios.nome
      user.token	= usuarios.TOKEN
      jRes.user = user
      RESULT jRes
     type : 458752
   -
     name : Nova_Conta
     procedure_id : 1456802947744083728
     type_code : 15
     code : |1-
      // Summary: <specify the procedure action>
      // Syntax:
      // Nova_Conta ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      // Example:
      // <Specify a usage example>
      //
      procedure Nova_Conta()
      
      WebserviceWriteMIMEType(mimeTypeJSON)
      jRes	is JSON
      
      dados	is Buffer	= WebserviceParameter(paramBuffer)
      STNewUser	is Structure
      	name	is string
      	email	is string
      	passw	is string
      END
      user is STNewUser
      Deserialize(user,dados,psdJSON)
      
      // Verificações
      IF user.email = "" THEN
      	jRes = Return_False(jRes,"EMPTY_EMAIL","E-mail não informado",400)
      	RESULT jRes
      END
      
      IF user.passw = "" THEN
      	jRes = Return_False(jRes,"EMPTY_PASSWORD","Senha não informada",400)
      	RESULT jRes
      END
      
      IF user.name = "" THEN
      	jRes = Return_False(jRes,"EMPTY_NAME","Nome não informado",400)
      	RESULT jRes
      END
      
      USUARIOS.ReadSeekFirst(EMAIL,user.email)
      IF USUARIOS.Found() THEN
      	jRes = Return_False(jRes,"USER_ALREADY_EXIST","Já existe uma conta atrelada a este e-mail",401)
      	RESULT jRes
      END
      
      usuarios.reset()
      uuid is string = GetUUID()
      data_validade is datetime = SysDateTime()
      data_validade.Minute += 5
      usuarios.NOME	= user.name
      usuarios.EMAIL	= user.email
      usuarios.SENHA	= user.passw
      usuarios.TOKEN	= uuid
      usuarios.ATIVO	= True
      usuarios.CODIGO_VERIFICACAO	= Gerar_Codigo_Aleatorio()
      usuarios.VALIDADE_CODIGO	= data_validade
      if usuarios.add() = false THEN
      	jRes = Return_False(jRes,"INTERNAL_ERROR","Erro ao adicionar no banco",500)
      	result jRes
      END
      
      STResposta is Structure
      	name	is string
      	email	is string
      	token	is string
      END
      new_user is stresposta
      new_user.name	= USUARIOS.NOME
      new_user.email	= usuarios.email
      new_user.token	= USUARIOS.TOKEN
      jRes.user = new_user
      RESULT jRes
     type : 458752
   -
     name : Return_False
     procedure_id : 1460967455409158840
     type_code : 15
     code : |1+
      // Summary: <specify the procedure action>
      // Syntax:
      //[ <Result> = ] Return_False (<jRes> is JSON, <erro> is string, <mensagem> is string, <codigo> is int)
      //
      // Parameters:
      //	jRes (JSON): 
      //	erro (ANSI string): <specify the role of erro>
      //	mensagem (ANSI string): <specify the role of mensagem>
      //	codigo (int): <specify the role of codigo>
      // Example:
      // <Specify a usage example>
      //
      procedure Return_False(jRes is json, erro is string, mensagem is string, codigo is int):json
      jRes.error		= erro
      jRes.message	= mensagem
      WebserviceWriteHTTPCode(codigo, jRes)
      result jRes
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : GlobalProcedures1
resources :
 string_res :
  identifier : 0x14379a0d00042d93
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
